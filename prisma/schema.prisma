// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  first_name   String
  last_name    String
  email        String        @unique
  password     String
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  Sales        Sale[]
  Transactions Transaction[]
}

model Product {
  id          String     @id @default(uuid())
  name        String
  description String
  price       Int
  quantity    Int
  SaleItem    SaleItem[]
}

model Sale {
  id        String     @id @default(uuid())
  user      User       @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id   String
  total_amt Int
  date      DateTime
  SaleItems SaleItem[]
}

model SaleItem {
  id          String        @id @default(uuid())
  sale        Sale          @relation(fields: [sales_id], references: [id])
  sales_id    String
  product     Product       @relation(fields: [product_id], references: [id])
  product_id  String
  quantity    Int
  unit_price  Int
  total_price Int
  Transaction Transaction[]
}

model Transaction {
  id            String   @id @default(uuid())
  user          User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id       String
  sales_item    SaleItem @relation(fields: [sales_item_id], references: [id])
  sales_item_id String
  amt           Int
}
